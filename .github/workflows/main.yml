name: Train model and publish Docker container
on:
  push:
    branches: ['main']

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: cifar10-pub

jobs:
  train-and-test-model:
    runs-on: self-hosted
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Python script
        run: python main_build.py

  package-and-deploy:
      needs: train-and-test-model
      runs-on: self-hosted
      permissions:
        contents: read
        packages: write

      steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Build
        uses: docker/setup-buildx-action@v1

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Convert repository name to lowercase
        id: repo_name
        run: echo "REPO_NAME=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.REPO_NAME }}:latest

      - name: Verify deployment
        run: echo "Container deployed successfully to GitHub Packages"
    
  notify-update:
      needs: package-and-deploy
      runs-on: self-hosted
      permissions:
        contents: read
        packages: write
        
      steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Invoke webhook
        run: |
          curl -X POST \
               -H "Content-Type: application/json" \
               -d '{"action": "event"}' \
               ${{ secrets.WEBHOOK_URL }}

      
